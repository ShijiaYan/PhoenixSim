package edu.columbia.lrl.CrossLayer.physical_models.devices.modulations.ook_nrz;

import java.util.ArrayList;

import ch.epfl.general_libraries.utils.MoreArrays;
import edu.columbia.lrl.CrossLayer.PowerConsumption;
import edu.columbia.lrl.CrossLayer.physical_models.PhysicalParameterAndModelsSet;
import edu.columbia.lrl.CrossLayer.physical_models.devices.modulations.AbstractDemodulatorAndReceiver;
import edu.columbia.lrl.CrossLayer.physical_models.devices.modulations.Abstract_OOK_SERDES_PowerModel;
import edu.columbia.lrl.CrossLayer.physical_models.devices.modulations.OOK_SERDES_PowerModel;
import edu.columbia.lrl.CrossLayer.physical_models.util.AbstractLinkFormat;

public abstract class Abstract_OOK_NRZ_Receiver extends AbstractDemodulatorAndReceiver {
	
	private Abstract_OOK_SERDES_PowerModel serdesPowerModel;

/*	public Abstract_OOK_NRZ_Receiver(double passiveJitterPenalty, OOK_SERDES_PowerModel serdes) {
		super(passiveJitterPenalty);
		this.serdesPowerModel = serdes;
	}*/
	
	// Added by Meisam
	public Abstract_OOK_NRZ_Receiver(double passiveJitterPenalty, Abstract_OOK_SERDES_PowerModel serdes) {
		super(passiveJitterPenalty);
		this.serdesPowerModel = serdes;
	}
	
	
	@Override
	public ArrayList<PowerConsumption> getDemodulationAndReceptionPowerConsumptions(
			double opticalPowerAtReceiverdBm,
			PhysicalParameterAndModelsSet modelSet,
			AbstractLinkFormat linkFormat) {
		double powCon = serdesPowerModel.getPowerConsumptionMW(linkFormat);
	// SERDESPOWER excluded for DATE paper
	//	PowerConsumption pc = new PowerConsumption("SERDES", true, true, false, powCon);
		return MoreArrays.getArrayList(/*pc*/);
	}

}
