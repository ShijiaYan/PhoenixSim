package Simulations.effectiveIndexMethod.stripWg.index_fitting;

import People.Meisam.GUI.Plotters.MatlabPlot.MatlabChart;
import PhotonicElements.Utilities.MathLibraries.CurveFitting.LeastSquare.leastsquares.Fitter;
import PhotonicElements.Utilities.MathLibraries.CurveFitting.LeastSquare.leastsquares.Function;
import PhotonicElements.Utilities.MathLibraries.CurveFitting.LeastSquare.leastsquares.fitters.MarquardtFitter;

public class StripIndexFitting {
	
	public static void main(String[] args){
		// 450X220nm
//		double[] neff_even = {2.4630619810110987444, 2.430607970192958156, 2.4110488236741538515, 2.398156691869933077, 2.3891625649163472644, 2.3826358527306030766, 2.377760710355358853, 2.3740434223071860131, 2.3711640955728596758, 2.3689068871718945708, 2.3671217996660169902, 2.365699031317017198, 2.3645574629800538702, 2.3636377771979018014, 2.3628960623329575697, 2.3622936064536967926, 2.3618040259911072809, 2.361405346207281486, 2.3610810450324231091, 2.3608160460144214099, 2.3605981662846002855, 2.3604222011523381397, 2.3602764468860453206, 2.3601568478236196746, 2.3600596544790763964, 2.3599793208775099451, 2.3599136677006193885, 2.3598599824080346288, 2.3598164880953182987, 2.3597792647646094188, 2.359749087633412401, 2.3597241343949719727, 2.3597044212504281191, 2.3596874886087340073, 2.3596744437562042762, 2.3596624441585483112, 2.3596527129165969505, 2.3596449612945664676, 2.3596395845031690186, 2.3596339592058330759} ;
//		double[] neff_odd = {2.3254654004834005576, 2.3287937885150267192, 2.3324128676318727216, 2.3360082339109609073, 2.3393937310846242283, 2.3424674272582950429, 2.3451860131327206815, 2.3475464769751326344, 2.349566289722901935, 2.3512779992692567355, 2.3527166643543022673, 2.353918540025598638, 2.3549171470891003821, 2.3557442493858462562, 2.3564292499334738018, 2.3569934542663881771, 2.3574582192128135105, 2.357840499558564229, 2.3581558445747354824, 2.3584148722510600571, 2.358626491717833229, 2.3588026492124498645, 2.3589457589386424452, 2.3590631955601431002, 2.3591605877128776214, 2.3592400239354693881, 2.3593055709709331857, 2.3593597062225124539, 2.3594047980792285379, 2.359440434060498859, 2.3594701589915971773, 2.3594944574390663838, 2.3595152752284294095, 2.3595316810013362563, 2.3595460846866647131, 2.3595566796073352833, 2.3595655390294396625, 2.3595731151053471741, 2.3595803431701432018, 2.3595851219215537853} ;
//		double[] gap_nm = {50.0, 74.358974358974358974, 98.717948717948717949, 123.07692307692307692, 147.4358974358974359, 171.79487179487179487, 196.15384615384615385, 220.51282051282051282, 244.87179487179487179, 269.23076923076923077, 293.58974358974358974, 317.94871794871794872, 342.30769230769230769, 366.66666666666666667, 391.02564102564102564, 415.38461538461538462, 439.74358974358974359, 464.10256410256410256, 488.46153846153846154, 512.82051282051282051, 537.17948717948717949, 561.53846153846153846, 585.89743589743589744, 610.25641025641025641, 634.61538461538461538, 658.97435897435897436, 683.33333333333333333, 707.69230769230769231, 732.05128205128205128, 756.41025641025641026, 780.76923076923076923, 805.12820512820512821, 829.48717948717948718, 853.84615384615384615, 878.20512820512820513, 902.5641025641025641, 926.92307692307692308, 951.28205128205128205, 975.64102564102564103, 1000.0} ;
		// 400X220nm
//		double[] neff_even = {2.3831696988364972079, 2.3399686646208386342, 2.3128624817189331608, 2.294441307506066785, 2.2812495561733898697, 2.271458629249059058, 2.2639965375913058132, 2.2582033224408593064, 2.253636790308636062, 2.2499968703969650541, 2.2470701936248413944, 2.2447004643150885173, 2.2427688720250467114, 2.2411901282424930848, 2.2398939932367629702, 2.2388255501295026839, 2.2379458147747754992, 2.237217593041564534, 2.2366133296237258321, 2.2361146396469835373, 2.2356975248065427131, 2.2353545487793882174, 2.2350648456558381838, 2.2348259216268204774, 2.234626105793969586, 2.2344608171545736752, 2.2343220031904449385, 2.2342055393530921847, 2.2341107667524262581, 2.2340317490113239529, 2.2339628649595133503, 2.2339064482592196903, 2.233859747523495809, 2.2338212478713446174, 2.2337884807611936289, 2.2337607513302688567, 2.23373732525107771, 2.2337169930617366553, 2.2337011598015008573, 2.2336874269616049382} ;
//		double[] neff_odd = {2.1798677251792217824, 2.1845347325270694228, 2.1897471349737309687, 2.1950382943403674574, 2.2001158063579411284, 2.2048056757651584014, 2.2090252171459630048, 2.2127486769548361245, 2.2159870897159321679, 2.218772799672443341, 2.2211518558282756786, 2.2231695981243690952, 2.224872004613065446, 2.2263056859956718014, 2.227508530587705593, 2.2285147446156789997, 2.2293584035793778675, 2.2300627146310079141, 2.2306498589653727116, 2.2311421511610962654, 2.2315500880902483516, 2.2318941005468189154, 2.232176687305580387, 2.2324145404259390091, 2.2326124392745585467, 2.232778852460352681, 2.2329165537392983154, 2.233030962003974107, 2.2331288538054745452, 2.2332107323175556246, 2.2332764391586250596, 2.233332137873837997, 2.2333792244648504877, 2.2334191767912758841, 2.2334519427962882254, 2.2334789290444971854, 2.2335014338075431795, 2.2335197081542541575, 2.2335357945664919832, 2.2335489413628786259} ;
//		double[] gap_nm = {50.0, 74.358974358974358974, 98.717948717948717949, 123.07692307692307692, 147.4358974358974359, 171.79487179487179487, 196.15384615384615385, 220.51282051282051282, 244.87179487179487179, 269.23076923076923077, 293.58974358974358974, 317.94871794871794872, 342.30769230769230769, 366.66666666666666667, 391.02564102564102564, 415.38461538461538462, 439.74358974358974359, 464.10256410256410256, 488.46153846153846154, 512.82051282051282051, 537.17948717948717949, 561.53846153846153846, 585.89743589743589744, 610.25641025641025641, 634.61538461538461538, 658.97435897435897436, 683.33333333333333333, 707.69230769230769231, 732.05128205128205128, 756.41025641025641026, 780.76923076923076923, 805.12820512820512821, 829.48717948717948718, 853.84615384615384615, 878.20512820512820513, 902.5641025641025641, 926.92307692307692308, 951.28205128205128205, 975.64102564102564103, 1000.0} ;
		// 500X220nm
		double[] neff_even = {2.5255320578060875825, 2.5009783353929324612, 2.4866615445204689472, 2.4774514210873874731, 2.4711459730028342285, 2.466640550074711502, 2.4633218515604302645, 2.4608230422401855542, 2.4589117004586671378, 2.4574297452283726528, 2.4562703832227170686, 2.4553562918306668372, 2.4546303749454820853, 2.4540527166390062597, 2.4535913391420223206, 2.4532208748717603264, 2.4529226941164101738, 2.4526828415979471387, 2.4524897686081117421, 2.4523334625874224635, 2.4522065382903632802, 2.4521044696420948306, 2.4520224609592582432, 2.451954783374957092, 2.4519005136894866936, 2.4518557321677798555, 2.4518200419648255028, 2.4517912114700326498, 2.4517674339921491367, 2.4517482852025542783, 2.4517324576867389752, 2.4517198528932335755, 2.4517097007422843369, 2.4517010065427764509, 2.4516943574204752565, 2.4516883955933370665, 2.4516832559360008936, 2.4516802486605469014, 2.4516774364905669081, 2.4516745546811411494} ;
		double[] neff_odd = {2.4286079787776708727, 2.43101762624786355, 2.4335988437940487827, 2.4361314599889904997, 2.4384885017833615173, 2.4406028574097304862, 2.4424522303797830958, 2.4440396084485369599, 2.4453838397719591669, 2.4465096592939659104, 2.4474454707466350989, 2.4482185760077666004, 2.4488535510535296424, 2.4493744446381082724, 2.449800851732603757, 2.4501482763326278835, 2.4504310520080543334, 2.450661510955540745, 2.4508493386783944956, 2.4510017825775838318, 2.4511251433377378994, 2.4512260267108025857, 2.4513086732177771232, 2.45137464822111939, 2.451428869479715722, 2.4514722100872994304, 2.4515080923601342278, 2.4515374181209335092, 2.4515609151764361506, 2.4515801989813539308, 2.4515956188700007701, 2.4516084367237338526, 2.4516189632671028242, 2.4516271047601372324, 2.4516341429196284452, 2.4516393394953035489, 2.4516432749024237303, 2.4516476620005152043, 2.4516508521659909903, 2.4516528590610580096} ;
		double[] gap_nm = {50.0, 74.358974358974358974, 98.717948717948717949, 123.07692307692307692, 147.4358974358974359, 171.79487179487179487, 196.15384615384615385, 220.51282051282051282, 244.87179487179487179, 269.23076923076923077, 293.58974358974358974, 317.94871794871794872, 342.30769230769230769, 366.66666666666666667, 391.02564102564102564, 415.38461538461538462, 439.74358974358974359, 464.10256410256410256, 488.46153846153846154, 512.82051282051282051, 537.17948717948717949, 561.53846153846153846, 585.89743589743589744, 610.25641025641025641, 634.61538461538461538, 658.97435897435897436, 683.33333333333333333, 707.69230769230769231, 732.05128205128205128, 756.41025641025641026, 780.76923076923076923, 805.12820512820512821, 829.48717948717948718, 853.84615384615384615, 878.20512820512820513, 902.5641025641025641, 926.92307692307692308, 951.28205128205128205, 975.64102564102564103, 1000.0} ;
		// ******
		int M = gap_nm.length ;
		double neff = (neff_even[M-1]+neff_odd[M-1])/2 ;
		double[][] gap = new double[M][1] ;
		for(int i=0; i<M; i++){
			gap[i][0] = gap_nm[i] ;
		}
		// step 1: Least square fitting for neff_even
		Function nFunc = new Function() {
			@Override
			public int getNParameters() {
				return 2;
			}
			@Override
			public int getNInputs() {
				return 1;
			}
			@Override
			public double evaluate(double[] values, double[] parameters) {
				double g = values[0] ;
				double aE = parameters[0] ;
				double gammaE = parameters[1] ;
				double ne = neff + aE * Math.exp(-gammaE*g) ;
				return ne;
			}
		};
		
		// even mode
		Fitter fit = new MarquardtFitter(nFunc) ;
		fit.setData(gap, neff_even);
		fit.setParameters(new double[] {0.2, 0.0001});
		fit.fitData();
		double aE = fit.getParameters()[0] ;
		System.out.println("aE = " + aE);
		double gammaE = fit.getParameters()[1] ;
		System.out.println("gammaE = " + gammaE);
		double[] neven_fit = new double[M] ;
		for(int i=0; i<M; i++){
			neven_fit[i] = neff + aE * Math.exp(-gammaE*gap_nm[i]) ;
		}
		// odd mode
		fit.setData(gap, neff_odd);
		fit.setParameters(new double[] {-0.2, 0.0001});
		fit.fitData();
		double aO = fit.getParameters()[0] ;
		System.out.println("aO = " + aO);
		double gammaO = fit.getParameters()[1] ;
		System.out.println("gammaO = " + gammaO);
		double[] nodd_fit = new double[M] ;
		for(int i=0; i<M; i++){
			nodd_fit[i] = neff + aO * Math.exp(-gammaO*gap_nm[i]) ;
		}
		
		// plot
		MatlabChart fig = new MatlabChart() ;
		fig.plot(gap_nm, neff_even, "b", 1f);
		fig.plot(gap_nm, neven_fit, "r", 2f);
		fig.plot(gap_nm, neff_odd, "b", 1f);
		fig.plot(gap_nm, nodd_fit, "r", 2f);
		fig.RenderPlot();
		fig.markerON(0);
		fig.setFigLineWidth(0, 0);
		fig.setFigLineWidth(2, 0);
		fig.markerON(2);
		fig.run(true);
		
		
		
		
		
		
		
		
	}

}
