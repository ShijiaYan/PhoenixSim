package PhotonicElements.GratingCouplers;

import PhotonicElements.Utilities.MathLibraries.Complex;
import PhotonicElements.Utilities.Wavelength;
import ch.epfl.general_libraries.clazzes.ParamName;
import flanagan.interpolation.LinearInterpolation;

public class GratingCoupler {

	/**  this class contains a wavelength dependent response of grating couplers
	 *   Data points from this paper:
	 *   [Liao, Peicheng, et al. "Ultradense Silicon Photonic Interface for Optical Interconnection." IEEE Photonics Technology Letters 27.7 (2015): 725-728.]
	 */

	
	Complex zero = new Complex(0,0), one = new Complex(1,0) ;
	
	double[] lambdaNm = {1500, 1509.98669, 1510.375766, 1510.895087, 1511.153441, 1511.542279, 1511.80087, 1511.928977, 1512.448061, 1512.837137, 1513.095728, 1513.223598, 1513.612435, 1514.261528, 1514.780612, 1515.039441, 1515.297795, 1515.946887, 1516.335725, 1516.594079, 1516.722424, 1517.371754, 1517.630108, 1518.409209, 1519.057827, 1519.315943, 1519.70478, 1520.224102, 1520.482456, 1521.00154, 1521.521099, 1521.910174, 1522.689513, 1523.078589, 1523.336942, 1523.856502, 1524.505357, 1524.893957, 1525.282795, 1525.932125, 1526.321438, 1527.231499, 1527.489853, 1528.139183, 1528.658267, 1529.438081, 1530.217896, 1530.606496, 1531.38631, 1532.165887, 1532.685447, 1533.205006, 1533.854574, 1534.50438, 1535.284432, 1535.934238, 1536.454272, 1537.234325, 1538.014852, 1538.404165, 1539.445423, 1540.225951, 1541.006716, 1541.656759, 1542.437287, 1543.087805, 1543.868571, 1544.649573, 1545.560347, 1546.341588, 1547.513567, 1548.424817, 1549.336303, 1550.508283, 1551.420245, 1552.332207, 1553.24417, 1554.546871, 1555.589555, 1556.501993, 1557.544676, 1558.326868, 1559.109059, 1559.630995, 1560.413424, 1561.325862, 1561.978282, 1562.760235, 1563.673148, 1564.326044, 1564.978226, 1565.630646, 1566.152583, 1566.675232, 1567.587907, 1568.110319, 1568.762739, 1569.415397, 1569.806849, 1570.329498, 1570.721663, 1571.504092, 1571.896257, 1572.418906, 1573.071327, 1573.463492, 1573.985903, 1574.508077, 1575.030726, 1575.553613, 1576.076025, 1576.46819, 1576.860117, 1577.252045, 1577.774219, 1578.166146, 1578.558073, 1578.950239, 1579.212157, 1579.604323, 1580.126496, 1580.518662, 1581.040835, 1581.433, 1581.95565, 1582.217568, 1582.609496, 1583.001661, 1583.394064, 1583.916713, 1584.308641, 1584.701281, 1585.22393, 1585.615858, 1586.008261, 1586.661156, 1586.923313, 1587.446437, 1587.969324, 1588.362202, 1588.75413, 1589.276541, 1589.53846, 1589.67037, 1589.932764, 1590.585422, 1591.108309, 1591.240219, 1591.763344, 1592.155509, 1592.547436, 1593.070323, 1593.463201, 1593.725358, 1593.987752, 1594.379679, 1594.77232, 1595.034714, 1595.296633, 1595.819044, 1596.211447, 1596.60385, 1596.735522, 1596.866957, 1597.128876, 1597.390557, 1597.653189, 1600} ;
	double[] transmissoindB = {-7.649623548, -7.598549649, -7.547486314, -7.496433542, -7.430761064, -7.37239844, -7.314025252, -7.248342211, -7.18999015, -7.138926814, -7.080553626, -7.007571296, -6.949208671, -6.883567884, -6.825215823, -6.774141924, -6.708469447, -6.642828659, -6.584466035, -6.518793557, -6.460409806, -6.402068308, -6.336395831, -6.263466317, -6.183226951, -6.110255185, -6.05189256, -6.000839788, -5.935167311, -5.876815249, -5.833061767, -5.781998431, -5.716368207, -5.665304872, -5.599632395, -5.555878912, -5.482938835, -5.417276921, -5.358914297, -5.300572799, -5.256808753, -5.205787671, -5.140115194, -5.081773696, -5.023421634, -4.972389989, -4.921358344, -4.85569643, -4.804664785, -4.74633385, -4.702580367, -4.658826885, -4.607784676, -4.564041757, -4.520309401, -4.476566482, -4.447411578, -4.403679222, -4.374545445, -4.330781399, -4.308968038, -4.279834261, -4.257999773, -4.221556143, -4.192422366, -4.170577315, -4.148742827, -4.134207628, -4.105084415, -4.097848505, -4.090644286, -4.076119651, -4.068894306, -4.061690087, -4.069063319, -4.076436552, -4.083809785, -4.091214708, -4.113197083, -4.135168895, -4.15715127, -4.179112518, -4.201073767, -4.230313178, -4.259573715, -4.281545527, -4.31809479, -4.332756749, -4.36932714, -4.420474982, -4.449724956, -4.48627422, -4.515513631, -4.56665091, -4.595922011, -4.63976, -4.676309264, -4.720157817, -4.742087375, -4.793224654, -4.83705208, -4.866312618, -4.910140044, -4.961277323, -4.997826586, -5.041654013, -5.085492002, -5.122030702, -5.173167981, -5.23160455, -5.275442539, -5.319269965, -5.355798102, -5.392326239, -5.428864939, -5.465393076, -5.501921213, -5.545748639, -5.589565502, -5.633392928, -5.669931629, -5.713759055, -5.750297755, -5.794125181, -5.84526246, -5.889079323, -5.92560746, -5.969434886, -6.020561602, -6.071698881, -6.108227017, -6.166653022, -6.217790301, -6.254318438, -6.305445154, -6.356592996, -6.407709148, -6.473445006, -6.531881574, -6.597606868, -6.634135005, -6.677972995, -6.721789858, -6.772895446, -6.831310888, -6.875159441, -6.933596009, -6.984701598, -7.050437456, -7.094264882, -7.130793019, -7.189229587, -7.254954881, -7.306071033, -7.364486475, -7.401014612, -7.459440617, -7.517856058, -7.561672921, -7.605510911, -7.656637626, -7.707764342, -7.751570641, -7.788077651, -7.831894514, -7.868412088, -7.934126819, -7.985232407} ;
	
	Wavelength inputLambda ;
	
	public GratingCoupler(
			@ParamName(name="Wavelength (nm)") Wavelength inputLambda
			){
		this.inputLambda = inputLambda ;
	}
	
	public double getTransmissiondB(){
		LinearInterpolation linTrans = new LinearInterpolation(lambdaNm, transmissoindB) ;
		double transdB = linTrans.interpolate(inputLambda.getWavelengthNm()) ;
		return transdB ;
	}
	
	public double getLossdB(){
		double transdB = getTransmissiondB() ;
		double lossdB = -1 * transdB ;
		return lossdB ;
	}
	
	// now calculating scattering parameters
	
	public Complex getS11(){
		double transdB = getTransmissiondB() ;
		double trans = Math.pow(10, transdB/10) ;
		double reflection = (1-trans)*Math.pow(10, -4) ; // 40 dB lower than a lossless network
		Complex S11 = new Complex(Math.sqrt(reflection), 0) ;
		return S11 ;
	}
	
	public Complex getS21(){
		double transdB = getTransmissiondB() ;
		double trans = Math.pow(10, transdB/10) ;
		Complex S21 = new Complex(0,-Math.sqrt(trans)) ;
		return S21 ;
	}
	
	public Complex getS12(){
		return getS21() ;
	}
	
	public Complex getS22(){
		return getS11() ;
	}
	
	// Now characterizing the ports 
	
	public Complex getPort1(Complex port1In, Complex port2In){
		Complex T1 = port1In.times(getS11()) ;
		Complex T2 = port2In.times(getS12()) ;
		return T1.plus(T2) ;
	}
	
	public Complex getPort2(Complex port1In, Complex port2In){
		Complex T1 = port1In.times(getS21()) ;
		Complex T2 = port2In.times(getS22()) ;
		return T1.plus(T2) ;
	}
	
}
